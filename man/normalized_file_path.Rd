% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/directree.R
\name{normalized_file_path}
\alias{normalized_file_path}
\title{Platform-Independent Normalized File Paths}
\usage{
normalized_file_path(
  ...,
  fsep = .Platform$file.sep,
  winslash = "\\\\",
  mustWork = NA
)
}
\arguments{
\item{...}{\code{character} vectors for file paths. 
See \code{\link[base]{file.path}}.}

\item{fsep}{Path separator to use (assumed to be ASCII).
See \code{\link[base]{file.path}}.}

\item{winslash}{Separator to be used on Windows - ignored elsewhere. 
See \code{\link[base]{normalizePath}}.}

\item{mustWork}{\code{logical}: if \code{TRUE} then an error is given if 
the result cannot be determined; if \code{NA}, then a warning.
See \code{\link[base]{normalizePath}}.}
}
\value{
\code{character} vector of the full file paths.
 See \code{\link[base]{normalizePath}} and \code{\link[base]{file.path}}.
}
\description{
Combines \code{\link[base]{normalizePath}} and 
 \code{\link[base]{file.path}} to produce normalized canonical paths
 for files in a platform-independent fashion.
}
\examples{
 normalized_file_path("~")
 normalized_file_path(".", "folder", "file.ext", mustWork = FALSE)
 # compare to 
 normalizePath(c(".", "folder", "file.ext"), mustWork = FALSE)
 file.path(".", "folder", "file.ext")

}
